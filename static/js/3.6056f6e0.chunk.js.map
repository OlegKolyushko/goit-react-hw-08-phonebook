{"version":3,"sources":["components/Alert/Alert.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","views/styles/Contacts.module.css","redux/contact/contactSelectors.js","components/Filter/Filter.js","redux/contact/contactOperations.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Alert/Alert.js","views/ContactsView.js"],"names":["module","exports","getFilter","state","contacts","filter","getContact","items","getLoading","loading","getFilteredContact","createSelector","contact","name","toLowerCase","includes","mapDispatchToProps","handlerFilter","contactActions","filterContact","connect","value","contactSelectors","className","styles","container","label","input","type","onChange","e","target","axios","defaults","baseURL","addContact","number","dispatch","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","fetchContact","fetchContactRequest","get","fetchContactSuccess","fetchContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","handlerForm","preventDefault","props","find","alert","onAddContact","setState","handlerName","handlerNumber","this","onSubmit","inputName","placeholder","inputNumber","pattern","button","Component","contactOperations","ContactListItem","item","info","onClick","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","Alert","text","ContactsView","inList","handlerAlert","setTimeout","onFetchContacts","length","in","appear","title","alertStyles","unmountOnExit","Loader"],"mappings":"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","file":"static/js/3.6056f6e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__1IvoX\",\"enterActive\":\"Alert_enterActive__1kOMB\",\"exit\":\"Alert_exit__3tZGe\",\"exitActive\":\"Alert_exitActive__K7Ksc\",\"container\":\"Alert_container__1xJw_\",\"text\":\"Alert_text__1dYSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3v-HY\",\"label\":\"Filter_label__2n4ah\",\"input\":\"Filter_input__2s86p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactForm_name__2S96E\",\"number\":\"ContactForm_number__277eE\",\"inputName\":\"ContactForm_inputName__1W3EZ\",\"inputNumber\":\"ContactForm_inputNumber__21cDz\",\"button\":\"ContactForm_button__1P6lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1wxFm\",\"info\":\"ContactListItem_info__34q7S\",\"button\":\"ContactListItem_button__3yjXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__13DAF\",\"enterActive\":\"ContactList_enterActive__3r9bR\",\"exit\":\"ContactList_exit__LxHyE\",\"exitActive\":\"ContactList_exitActive__1OTKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Contacts_appear__F_84p\",\"appearActive\":\"Contacts_appearActive__1OI9n\",\"title\":\"Contacts_title__2CrU-\",\"section\":\"Contacts_section__2QDPl\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getContact = (state) => state.contacts.items;\r\n\r\nconst getFilteredContact = createSelector(\r\n  [getContact, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getContact,\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContact,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactActions from '../../redux/contact/contactActions';\r\nimport contactSelectors from '../../redux/contact/contactSelectors';\r\n\r\nfunction Filter({value, handlerFilter}) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <label className={styles.label}>\r\n            Search contacts by name\r\n            <input className={styles.input} type=\"text\" value={value} onChange={e => handlerFilter(e.target.value)} ></input>\r\n            </label>\r\n        </div>\r\n    )\r\n\r\n};\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    handlerFilter: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    value: contactSelectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = {\r\n    handlerFilter: contactActions.filterContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import axios from \"axios\";\r\nimport contactActions from \"./contactActions\";\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({data}) =>\r\n      dispatch(contactActions.addContactSuccess(data))\r\n    )\r\n    .catch((error) => dispatch(contactActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(contactActions.fetchContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactActions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(contactActions.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactActions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactActions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContact,\r\n  deleteContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactOperations from '../../redux/contact/contactOperations';\r\n\r\n class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n  }\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handlerForm = (e) => {\r\n    e.preventDefault();\r\n    const {name, number} = this.state;\r\n    const {contacts} = this.props;\r\n    const contactInList = contacts.find(contact => contact.name === name);\r\n    if(contactInList) {\r\n      this.props.alert();\r\n      return;\r\n    }\r\n    this.props.onAddContact(name, number);\r\n    this.setState({name: ''});\r\n    this.setState({number: ''});\r\n  };\r\n  handlerName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handlerNumber = (e) => {\r\n      this.setState({ number: e.target.value });\r\n  }\r\n\r\n  render() {\r\n      const {name, number} = this.state\r\n    return (\r\n      <form onSubmit={this.handlerForm}>\r\n        <label className={styles.name}>Name\r\n        <input className={styles.inputName} type=\"text\" value={name} onChange={this.handlerName} placeholder='Enter your name'></input>\r\n        </label>\r\n        <label className={styles.number}>Number\r\n        <input className={styles.inputNumber} type=\"tel\"  value={number} onChange={this.handlerNumber} pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\" placeholder='123-12-12' ></input>\r\n        </label>       \r\n        <button className={styles.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactOperations.addContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ name, number, deleteContact }) {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.info}>\r\n      {name} : {number}\r\n      </span>\r\n       <button className={styles.button} onClick={deleteContact}>Delete</button>\r\n    </li>\r\n  );\r\n}\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n}\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\nimport contactSelectors from '../../redux/contact/contactSelectors';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={styles}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            deleteContact={() => deleteContact(id)}\r\n          ></ContactListItem>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(Object),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   contacts: contactSelectors.getFilteredContact(state),\r\n});\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact: contactOperations.deleteContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from './Alert.module.css';\r\n\r\nfunction Alert() {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.text}>Contact already exist!</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport Loader from \"../components/Loader/Loader\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./styles/Contacts.module.css\";\r\nimport alertStyles from \"../components/Alert/Alert.module.css\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport contactSelectors from \"../redux/contact/contactSelectors\";\r\nimport contactOperations from \"../redux/contact/contactOperations\";\r\n\r\nclass ContactsView extends Component {\r\n  state = {\r\n    inList: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { contacts, onFetchContacts } = this.props;\r\n    if (contacts.length > 0) {\r\n      return;\r\n    }\r\n    onFetchContacts();\r\n  }\r\n\r\n  handlerAlert = () => {\r\n    this.setState({ inList: true });\r\n    setTimeout(() => {\r\n      this.setState({ inList: false });\r\n    }, 2500);\r\n  };\r\n\r\n  render() {\r\n    const { inList } = this.state;\r\n    const { contacts, loading } = this.props;\r\n\r\n    return (\r\n      <section>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={styles}\r\n        >\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={inList}\r\n          timeout={250}\r\n          classNames={alertStyles}\r\n          unmountOnExit\r\n        >\r\n          <Alert />\r\n        </CSSTransition>\r\n        {loading && <Loader />}\r\n        <section className={styles.container}>\r\n          <ContactForm alert={this.handlerAlert}></ContactForm>\r\n        </section>\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <br></br>\r\n            <Filter />\r\n            <ContactList />\r\n          </>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getContact(state),\r\n  loading: contactSelectors.getLoading(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactOperations.fetchContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}